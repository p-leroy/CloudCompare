name: Build ClouCompare master_oseren

on:
  push:
    branches: [ "master_oseren" ]
  pull_request:
    branches: [ "master_oseren" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  CONDA_ENV: CloudCompareDev

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache conda pkgs
      uses: actions/cache@v3
      with:
        path: C:/Miniconda/pkgs
        key: windows-conda-pkgs-${{ hashFiles('.ci/conda-win.yml') }}
        restore-keys: |
          windows-conda-pkgs-
    
    - name: Install Dependencies
      uses: conda-incubator/setup-miniconda@v3
      with:
        architecture: x64
        activate-environment: CloudCompareDev
        auto-activate-base: false
        environment-file: .ci/conda-win.yml

    - name: Show conda info
      shell: powershell
      run: |
        conda info --base
        echo "Package cache dirs:"
        conda info --base | ForEach-Object { Join-Path $_ 'pkgs' }
        conda info

    # Configure MSVC console
    - name: Configure MSVC console (Windows)
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set environment for MSVC (Windows)
      run: |
        echo "CXX=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CC=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Configure CMake
      shell: powershell
      run: |
        mkdir build

        $env:CONDA_LIB_DIR = "$env:CONDA_PREFIX/Library"
        $env:EIGEN_ROOT_DIR = "$env:CONDA_LIB_DIR/include/eigen3"

        cmake `
            -B build `
            -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_PREFIX_PATH="$CONDA_LIB_DIR" `
            `
            -DXercesC_INCLUDE_DIR="$env:CONDA_LIB_DIR/include" `
            -DXercesC_LIBRARY="$env:CONDA_LIB_DIR/lib/xerces-c.lib" `
            `
            -DLASZIP_LIBRARY="$env:CONDA_LIB_DIR/include" `
            -DLASZIP_INCLUDE_DIR="$env:CONDA_LIB_DIR/lib/laszip3.lib" `
            `
            -DEIGEN_ROOT_DIR="$env:EIGEN_ROOT_DIR" `
            `
            -DOPTION_SUPPORT_GAMEPADS=ON `
            -DPLUGIN_EXAMPLE_GL=ON `
            -DPLUGIN_EXAMPLE_IO=ON `
            -DPLUGIN_EXAMPLE_STANDARD=ON `
            -DPLUGIN_GL_QEDL=ON `
            -DPLUGIN_GL_QSSAO=ON `
            -DPLUGIN_IO_QADDITIONAL=ON `
            -DPLUGIN_IO_QCORE=ON `
            -DPLUGIN_IO_QE57=ON `
            -DPLUGIN_IO_QPHOTOSCAN=OFF `
            -DPLUGIN_IO_QLAS=ON `
            -DPLUGIN_IO_QRDB=ON  `
            -DPLUGIN_IO_QRDB_FETCH_DEPENDENCY=ON  `
            -DPLUGIN_IO_QRDB_INSTALL_DEPENDENCY=ON  `
            -DPLUGIN_STANDARD_QANIMATION=OFF `
            -DQANIMATION_WITH_FFMPEG_SUPPORT=OFF `
            -DPLUGIN_STANDARD_QBROOM=ON `
            -DPLUGIN_STANDARD_QCANUPO=OFF `
            -DPLUGIN_STANDARD_QCOMPASS=ON `
            -DPLUGIN_STANDARD_QCSF=ON `
            -DPLUGIN_STANDARD_QFACETS=ON `
            -DPLUGIN_STANDARD_QHOUGH_NORMALS=ON `
            -DPLUGIN_STANDARD_QHPR=ON `
            -DPLUGIN_STANDARD_QM3C2=ON `
            -DPLUGIN_STANDARD_QPCV=ON `
            -DPLUGIN_STANDARD_QPOISSON_RECON=ON `
            -DPLUGIN_STANDARD_QSRA=ON `
            -DPLUGIN_STANDARD_QRANSAC_SD=ON `
            -DPLUGIN_STANDARD_QPCL=ON `
            -DPLUGIN_STANDARD_QCLOUDLAYERS=ON `
            -DPLUGIN_STANDARD_QVOXFALL=ON

    - name: Build
      run: cmake --build build --parallel

    - name: Install (Windows)
      run: cmake --install build

    # Upload artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CloudCompare-build
        path: |
          build/Release/*
