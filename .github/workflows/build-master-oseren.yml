name: Build ClouCompare master_oseren

on:
  push:
    branches: [ "master_oseren" ]
  pull_request:
    branches: [ "master_oseren" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # Cache conda package downloads
    - name: Cache Conda packages
      uses: actions/cache@v4
      with:
        path: C:\Miniconda\pkgs
        key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('.ci/conda-win.yml') }}
        restore-keys: ${{ runner.os }}-conda-pkgs-

    # Setup Miniconda
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        architecture: x64
        auto-activate-base: true
        activate-environment: CloudCompareDev
        auto-update-conda: true

    # Install mamba in base env
    - name: Install mamba
      run: conda install -n base -c conda-forge mamba

    # Create /update envirnement using mamba
    - name: Create Conda environement with mamba
      run: |
        if mamba env list | findstr "CloudCompareDev" >nul 2>&1; then
          echo "Updating existing environment"
          mamba env update -n CloudCompareDev -f .ci/conda-win.yml
        else
          echo "Creating new environment"
          mamba env create -n CloudCompareDev -f .ci/conda-win.yml
        fi

    # Configure MSVC console
    - name: Configure MSVC console (Windows)
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set environment for MSVC (Windows)
      run: |
        echo "CXX=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CC=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Configure CMake
      shell: bash -l {0}
      run: |
        mkdir build

        export CONDA_LIB_DIR="$CONDA_PREFIX/Library"
        export EIGEN_ROOT_DIR="$CONDA_LIB_DIR/include/eigen3"

        cmake \
            -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="$CONDA_LIB_DIR" \
            -DEIGEN_ROOT_DIR="$EIGEN_ROOT_DIR" \
            -DOPTION_SUPPORT_GAMEPADS=ON \
            -DPLUGIN_EXAMPLE_GL=ON \
            -DPLUGIN_EXAMPLE_IO=ON \
            -DPLUGIN_EXAMPLE_STANDARD=ON \
            -DPLUGIN_GL_QEDL=ON \
            -DPLUGIN_GL_QSSAO=ON \
            -DPLUGIN_IO_QADDITIONAL=ON \
            -DPLUGIN_IO_QCORE=ON \
            -DPLUGIN_IO_QE57=ON \
            -DPLUGIN_IO_QPHOTOSCAN=ON \
            -DPLUGIN_IO_QLAS=ON \
            -DPLUGIN_IO_QRDB=ON  \
            -DPLUGIN_IO_QRDB_FETCH_DEPENDENCY=ON  \
            -DPLUGIN_IO_QRDB_INSTALL_DEPENDENCY=ON  \
            -DPLUGIN_STANDARD_QANIMATION=ON \
            -DQANIMATION_WITH_FFMPEG_SUPPORT=ON \
            -DPLUGIN_STANDARD_QBROOM=ON \
            -DPLUGIN_STANDARD_QCANUPO=OFF \
            -DPLUGIN_STANDARD_QCOMPASS=ON \
            -DPLUGIN_STANDARD_QCSF=ON \
            -DPLUGIN_STANDARD_QFACETS=ON \
            -DPLUGIN_STANDARD_QHOUGH_NORMALS=ON \
            -DPLUGIN_STANDARD_QHPR=ON \
            -DPLUGIN_STANDARD_QM3C2=ON \
            -DPLUGIN_STANDARD_QPCV=ON \
            -DPLUGIN_STANDARD_QPOISSON_RECON=ON \
            -DPLUGIN_STANDARD_QSRA=ON \
            -DPLUGIN_STANDARD_QRANSAC_SD=ON \
            -DPLUGIN_STANDARD_QPCL=ON \
            -DPLUGIN_STANDARD_QCLOUDLAYERS=ON \
            -DPLUGIN_STANDARD_QVOXFALL=ON \
            .

    - name: Check Format
      run: cmake --build build --target check-format

    - name: Build
      run: cmake --build build --parallel

    - name: Install (Windows)
      run: cmake --install build 
